"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[543],{4109:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"Miscellaneous/Contribution","title":"Contribution","description":"Envy and Spite is an open-source project, as well as this documentation. This gives you opportunity to create your own document and contribute into this project. In this page, you will see contribution standards.","source":"@site/docs/Miscellaneous/Contribution.mdx","sourceDirName":"Miscellaneous","slug":"/Miscellaneous/Contribution","permalink":"/SpiteDocs/docs/Miscellaneous/Contribution","draft":false,"unlisted":false,"editUrl":"https://github.com/Envy-Spite-Team/SpiteDocs/docs/Miscellaneous/Contribution.mdx","tags":[],"version":"current","frontMatter":{"title":"Contribution"},"sidebar":"tutorialSidebar","previous":{"title":"Names of Enemies","permalink":"/SpiteDocs/docs/Miscellaneous/Enemy Names"}}');var i=n(4848),s=n(8453);const r={title:"Contribution"},a="Intro",c={},u=[{value:"Creating a document",id:"creating-a-document",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"intro",children:"Intro"})}),"\n",(0,i.jsx)(t.p,{children:"Envy and Spite is an open-source project, as well as this documentation. This gives you opportunity to create your own document and contribute into this project. In this page, you will see contribution standards."}),"\n",(0,i.jsx)(t.p,{children:"Useful Resources:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://docusaurus.io/docs/",children:"Docusaurus Documentation"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Because this documentation was made with Docusaurus, you should probably know how to use it."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This documentation website uses Docusaurus. Because of that, documents are parsed using MDX and must follow JSX formatting. Here is a simple example of JSX:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-mdx",children:'<div style={{ textAlign: "center" }}>\r\n\r\n    # Welcome to the <span style={{color:"cyan"}}>Rude Level Editor Documentation</span> wiki.\r\n\t\r\n    <img src="https://github.com/layzyidiot/e-sw/blob/main/images/new.png?raw=true" alt="Header" width="90%" height="90%"></img>\r\n\r\n</div>\n'})}),"\n",(0,i.jsx)("figcaption",{children:"The code is simplified for readability."}),"\n",(0,i.jsx)(t.h2,{id:"creating-a-document",children:"Creating a document"})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);