"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[196],{6199:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Tutorials/Music","title":"Setting up MusicManager","description":"Intro","source":"@site/docs/Tutorials/Music.mdx","sourceDirName":"Tutorials","slug":"/Tutorials/Music","permalink":"/SpiteDocs/docs/Tutorials/Music","draft":false,"unlisted":false,"editUrl":"https://github.com/Envy-Spite-Team/SpiteDocs/docs/Tutorials/Music.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Texturing","permalink":"/SpiteDocs/docs/Tutorials/Texturing"},"next":{"title":"Object activator and what they do.","permalink":"/SpiteDocs/docs/Tutorials/Object Activator"}}');var t=s(4848),r=s(8453);const l={},c="Setting up MusicManager",a={},o=[{value:"Intro",id:"intro",level:2},{value:"Fields",id:"fields",level:2},{value:"Functions",id:"functions",level:2},{value:"Actually Using Music Changer",id:"actually-using-music-changer",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"setting-up-musicmanager",children:"Setting up MusicManager"})}),"\n",(0,t.jsx)(n.h2,{id:"intro",children:"Intro"}),"\n",(0,t.jsx)(n.p,{children:"Every good Ultrakill level has to have music, Otherwise it would leave levels bland and unexciting."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MusicManager"})," Is a gameobject thats a child of ",(0,t.jsx)(n.code,{children:"StatsManager"})," its job is very apparent from it's name, It manages music in the level, Specifically Clean music and Combat music and music for bosses."]}),"\n",(0,t.jsxs)(n.p,{children:["If you used the statsmanager prefab from the ",(0,t.jsx)(n.a,{href:"/SpiteDocs/docs/Setup/Scene%20Setup",children:"Basic Scene Setup"}),", it should be already set, and all you have to do is make ",(0,t.jsx)(n.code,{children:"MusicChanger"})," triggers. But before that, let's explain each field of ",(0,t.jsx)(n.code,{children:"MusicManager"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Off"})," - Exactly what you think. It disables or enables music in the level."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Volume"})," - is a floating point variable where 1 is full blast and 0 is none, For example if you want the volume in your level to be half that of it's original volume (commonly via an object activator), you'd change the volume variable to ",(0,t.jsx)(n.code,{children:"0.5"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"filtering"})," - is a variable declared in Update() \u2014 it's a high-pass filter"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"arenamode"})," - is a variable representing the state of the arena \u2014 if it has enemies, a boss?, or if it's clean."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"allThemes"})," - is an array of the following themes:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"cleanTheme"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"battleTheme"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"bossTheme"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:(0,t.jsx)(n.code,{children:"targetTheme"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Before any music is played, ",(0,t.jsx)(n.code,{children:"targetTheme"})," is set to ",(0,t.jsx)(n.code,{children:"None"}),". This is because none of the themes are actually played. Instead, they are copied to ",(0,t.jsx)(n.code,{children:"targetTheme"})," when needed."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["These are the 3 (",(0,t.jsx)(n.em,{children:"excluding targetTheme"}),") AudioClips declared in ",(0,t.jsx)(n.code,{children:"MusicManager"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"allTheme"})," - is the variable used in the array ",(0,t.jsx)(n.code,{children:"allThemes"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"forcedOff"})," - is a variable used in functions such as ",(0,t.jsx)(n.code,{children:"ArenaMusicStart()"}),", ",(0,t.jsx)(n.code,{children:"ForceStartMusic()"}),", ",(0,t.jsx)(n.code,{children:"ForceStopMusic()"}),", etc."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"dontMatch"})," - is a variable used in functions such as ",(0,t.jsx)(n.code,{children:"PlayBattleMusic()"}),",  ",(0,t.jsx)(n.code,{children:"PlayCleanMusic()"}),", etc."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"requestedThemes"})," - is the variable used to represent the amount of themes are required to be changed in the functions ",(0,t.jsx)(n.code,{children:"PlayBattleMusic()"}),", ",(0,t.jsx)(n.code,{children:"PlayCleanMusic()"}),", and ",(0,t.jsx)(n.code,{children:"ArenaMusicEnd"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["Note: This is a shortened list of all functions avalible to ",(0,t.jsx)(n.code,{children:"MusicManager"}),"."]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"StartMusic()"})," - if the variable ",(0,t.jsx)(n.code,{children:"forcedOff"})," is ",(0,t.jsx)(n.code,{children:"true"}),", don't do anything. Start every declared theme at 0:00, turn the ",(0,t.jsx)(n.code,{children:"off"})," variable to ",(0,t.jsx)(n.code,{children:"false"}),", change cleanTheme's volume to the volume declared in ",(0,t.jsx)(n.code,{children:"MusicManager"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"StopMusic()"})," - the variable ",(0,t.jsx)(n.code,{children:"off"})," is set to ",(0,t.jsx)(n.code,{children:"true"})," and using the allTheme array, the volume of each theme is set to 0, and then the ",(0,t.jsx)(n.code,{children:"AudioSource(s)"})," are stopped."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PlayBossMusic()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the ",(0,t.jsx)(n.code,{children:"targetTheme"})," isn't equal to ",(0,t.jsx)(n.code,{children:"bossTheme"}),", set ",(0,t.jsx)(n.code,{children:"bossTheme's"})," time to ",(0,t.jsx)(n.code,{children:"cleanTheme's"})," time."]}),"\n",(0,t.jsxs)(n.li,{children:["Set the ",(0,t.jsx)(n.code,{children:"targetTheme"})," to ",(0,t.jsx)(n.code,{children:"bossTheme"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"actually-using-music-changer",children:"Actually Using Music Changer"}),"\n",(0,t.jsx)(n.p,{children:"Finally, we are going to explain how to change and play music in your levels, I hope this section is way more comprehendable than the graph over at the rude wiki."}),"\n",(0,t.jsxs)(n.p,{children:["Start by creating an empty gameobject and then add a box collider component to it and set it to be a trigger. Select ",(0,t.jsx)(n.code,{children:"Add Component"})," and search for the ",(0,t.jsx)(n.code,{children:"MusicChanger"})," component."]}),"\n",(0,t.jsx)("div",{style:{textAlign:"center"},children:(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:"https://github.com/layzyidiot/e-sw/blob/main/images/music.png?raw=true",alt:"Music Changer",width:"50%",height:"50%"}),(0,t.jsx)("figcaption",{children:"As you can see, there are 3 fields that we can add AudioClips to, Basically, Clean is for when no enemies are present, Combat is for when there is and Boss is for any enemy with a boss bar appears."})]})}),"\n",(0,t.jsxs)(n.p,{children:["You may realize that in the previous fields section, the fields like ",(0,t.jsx)(n.code,{children:"Match"})," or ",(0,t.jsx)(n.code,{children:"OnEnable"})," were missing. They are going to be discussion in this section."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Match"})," - is used if you already have music in your level playing and you want to switch to a different version on it ",(0,t.jsx)(n.strong,{children:"WHILE ALSO"})," matching the play time from the original song to the 2nd one. An example of this would be the music progression upon the second Cerberus' awakening in 0-5"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"OnEnable"})," - is used for just, enabling stuff when the music starts. i really dont understand why this exists even?"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"OneTime"})," - makes the trigger only start the music once. This option is recommended to be left on as music restarting upon each trigger activation is rarely desired."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);