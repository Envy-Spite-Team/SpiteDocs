"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4857],{8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var n=r(6540);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}},9899:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Tutorials/Level Structure","title":"Level Structure","description":"Levels in ULTRAKILL consist of rooms. Rooms contain the geometry of the level and the arena","source":"@site/docs/Tutorials/Level Structure.mdx","sourceDirName":"Tutorials","slug":"/Tutorials/Level Structure","permalink":"/SpiteDocs/docs/Tutorials/Level Structure","draft":false,"unlisted":false,"editUrl":"https://github.com/Envy-Spite-Team/SpiteDocs/docs/Tutorials/Level Structure.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Level Structure","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Scene Setup","permalink":"/SpiteDocs/docs/Setup/Scene Setup"},"next":{"title":"Geometry","permalink":"/SpiteDocs/docs/Tutorials/Geometry"}}');var o=r(4848),i=r(8453);const s={title:"Level Structure",sidebar_position:1},a="ULTRAKILL Level Structure",c={},l=[{value:"Room Hierarchy",id:"room-hierarchy",level:2},{value:"Naming of the rooms",id:"naming-of-the-rooms",level:2}];function h(e){const t={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"ultrakill-level-structure",children:"ULTRAKILL Level Structure"})}),"\n",(0,o.jsxs)(t.p,{children:["Levels in ULTRAKILL consist of ",(0,o.jsx)(t.em,{children:"rooms"}),". Rooms contain the geometry of the level and the arena\r\nlogic itself. It is highly recommended to build levels this way for organization and ease of\r\nmaking arenas. Here is the example of a such hierarchy:"]}),"\n",(0,o.jsx)(t.p,{children:"[IMAGE PLACEHOLDER]"}),"\n",(0,o.jsx)(t.h2,{id:"room-hierarchy",children:"Room Hierarchy"}),"\n",(0,o.jsxs)(t.p,{children:["The room has 2 child gameobjects. ",(0,o.jsx)(t.em,{children:"Stuff"})," and ",(0,o.jsx)(t.em,{children:"Non-Stuff"}),". Stuff is for waves and enemies, while\r\nNon-Stuff is for geometry, lighting, etc. Everything in Non-Stuff is not required to have a\r\nstrict hierarchy, so you can put level geometry in it without a need to organize them."]}),"\n",(0,o.jsx)(t.p,{children:"[IMAGE PLACEHOLDER]"}),"\n",(0,o.jsxs)(t.p,{children:["On the other hand, Stuff needs to have a ",(0,o.jsx)(t.em,{children:"strict hierarchy"})," for the arenas to work properly.\r\nInside of it, you can create ",(0,o.jsx)(t.em,{children:"Wave"})," gameobjects that will contain the enemies for that wave and\r\n",(0,o.jsx)(t.em,{children:"Encounters"})," that can contain waves inside of them. You will learn about them by proceeding\r\nfurther into the wiki."]}),"\n",(0,o.jsx)(t.p,{children:"[IMAGE PLACEHOLDER]"}),"\n",(0,o.jsx)(t.h2,{id:"naming-of-the-rooms",children:"Naming of the rooms"}),"\n",(0,o.jsxs)(t.p,{children:["It is considered a good practice to number your rooms according to their order, from start room\r\nto final room. For example: ",(0,o.jsx)(t.code,{children:"1 - Apartments"})," and ",(0,o.jsx)(t.code,{children:"2 - Streets"}),". This is not required, but it\r\nhelps with organizing when you are making a big level with multiple level creators involved."]}),"\n",(0,o.jsx)(t.p,{children:"[IMAGE PLACEHOLDER]"}),"\n",(0,o.jsxs)(t.admonition,{type:"important",children:[(0,o.jsx)(t.p,{children:"For this tutorial, please create at least 3 rooms.\r\nFor example:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"1 - Enterance\r\n2 - Main Room\r\n3 - Exit Room\n"})}),(0,o.jsx)(t.p,{children:"This is required for pages further in this tutorial."})]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);