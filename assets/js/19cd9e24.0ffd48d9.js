"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9948],{3635:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>h,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Tutorials/Lighting","title":"Lighting","description":"Intro","source":"@site/docs/Tutorials/Lighting.mdx","sourceDirName":"Tutorials","slug":"/Tutorials/Lighting","permalink":"/SpiteDocs/index.html/docs/Tutorials/Lighting","draft":false,"unlisted":false,"editUrl":"https://github.com/Envy-Spite-Team/SpiteDocs/docs/Tutorials/Lighting.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Lighting","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Geometry","permalink":"/SpiteDocs/index.html/docs/Tutorials/Geometry"},"next":{"title":"Checkpoints","permalink":"/SpiteDocs/index.html/docs/Tutorials/Checkpoints"}}');var s=t(4848),o=t(8453);const r={title:"Lighting",sidebar_position:3},l="Setting up lighting.",h={},a=[{value:"Intro",id:"intro",level:2},{value:"Creating light sources and their different use cases",id:"creating-light-sources-and-their-different-use-cases",level:2},{value:"Lighting up the level",id:"lighting-up-the-level",level:2},{value:"Skybox",id:"skybox",level:2}];function c(e){const i={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"setting-up-lighting",children:"Setting up lighting."})}),"\n",(0,s.jsx)(i.h2,{id:"intro",children:"Intro"}),"\n",(0,s.jsx)("b",{children:"In this page we will be covering 2 important things about lights, The lights themselves and skyboxes"}),"\n",(0,s.jsxs)(i.p,{children:["But before that you must know a ",(0,s.jsx)(i.em,{children:"few"})," things."]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"ULTRAKILL shaders are vertexlit, meaning that lighting is spread by faces, thus the more vertices your object has, the more smoother the lighting will be, at the cost of performance."}),"\n",(0,s.jsx)(i.li,{children:"Due to the previous point, what you see in the editor will never be the same in the game, you must see for yourself."}),"\n",(0,s.jsx)(i.li,{children:"Due to how the shaders were coded, If a object is affected by more than 8 lights it will begin to flicker."}),"\n"]}),"\n",(0,s.jsxs)("div",{style:{textAlign:"center"},children:[(0,s.jsx)(i.p,{children:"Heres how lighting looks like the in editor (left) vs in game (right)"}),(0,s.jsx)("img",{src:"https://coolboi21.github.io/Rude-Docs/Tutorials/Beginner/assets/lighting-101-vertexlit-example.png",alt:"Lighting in game",width:"90%",height:"90%"})]}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsxs)(i.p,{children:["Do note that when creating custom materials or textures, ",(0,s.jsx)(i.strong,{children:"always set their shader ULTRAKILL/Master!"})," If you use the standard Unity shader it will look bad."]})}),"\n",(0,s.jsx)(i.h2,{id:"creating-light-sources-and-their-different-use-cases",children:"Creating light sources and their different use cases"}),"\n",(0,s.jsx)(i.p,{children:"To create a light source right click in the scene menu, hit light and choose what you need."}),"\n",(0,s.jsx)("img",{src:"https://coolboi21.github.io/Rude-Docs/Tutorials/Beginner/assets/lighting-101-creating-a-light.png",alt:"Creating light",width:"70%",height:"70%"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Point light"}),"\n"]}),"\n",(0,s.jsx)("div",{style:{textAlign:"center"},children:(0,s.jsxs)("figure",{children:[(0,s.jsx)("img",{src:"https://coolboi21.github.io/Rude-Docs/Tutorials/Beginner/assets/lighting-101-lightingtypes-point.png",alt:"Point light",width:"50%",height:"50%"}),(0,s.jsx)("figcaption",{children:"This object speads light around itself in a certain radius. This is the usual way of creating lighting in ULTRAKILL."})]})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsxs)(i.ol,{start:"2",children:["\n",(0,s.jsx)(i.li,{children:"Spot light"}),"\n"]}),"\n",(0,s.jsx)("div",{style:{textAlign:"center"},children:(0,s.jsxs)("figure",{children:[(0,s.jsx)("img",{src:"https://coolboi21.github.io/Rude-Docs/Tutorials/Beginner/assets/lighting-101-lightingtypes-spot.png",alt:"Spot light",width:"50%",height:"50%"}),(0,s.jsx)("figcaption",{children:"Lights up an area its directed into, just like its real counterpart."})]})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsxs)(i.ol,{start:"3",children:["\n",(0,s.jsx)(i.li,{children:"Directional light"}),"\n"]}),"\n",(0,s.jsx)("div",{style:{textAlign:"center"},children:(0,s.jsxs)("figure",{children:[(0,s.jsx)("img",{src:"https://coolboi21.github.io/Rude-Docs/Tutorials/Beginner/assets/lighting-101-lightingtypes-directional.png",alt:"Directional light",width:"50%",height:"50%"}),(0,s.jsx)("figcaption",{children:"Simliar to the sun, it casts its light globally across the entire level, it can be used to light an entire level (might make it look bad) or a simulate a very strong light in one direction."})]})}),"\n",(0,s.jsx)(i.h2,{id:"lighting-up-the-level",children:"Lighting up the level"}),"\n",(0,s.jsx)(i.p,{children:"As it has been said above, ULTRAKILL uses vertexlit shaders. Thus for a high quality lighing, it is recommended to subdivide walls and floor one time. However, depending on the enviroment and atmosphere that you are\r\ncreating, more or less subdivisions are needed to be made. For example, if there is a single light source in a dark room, you can subdivide the lit floor 2 times, and not subdivide the walls at all."}),"\n",(0,s.jsx)(i.p,{children:"[IMAGE PLACEHOLDER]"}),"\n",(0,s.jsx)(i.admonition,{type:"warning",children:(0,s.jsx)(i.p,{children:"Excessive amount of subdivisions will cause poor performance in your level. Even if it runs fine on your PC, it may lag on lower-end computers."})}),"\n",(0,s.jsx)(i.h2,{id:"skybox",children:"Skybox"}),"\n",(0,s.jsxs)(i.p,{children:["To add a skybox from the orginal game, go into ",(0,s.jsx)(i.code,{children:"ULTRAKILL Assets/Materials/Skyboxes"})," and simply drag a material into the scene."]}),"\n",(0,s.jsx)(i.p,{children:"[IMAGE PLACEHOLDER]"}),"\n",(0,s.jsxs)(i.p,{children:["In case you want to add a custom skybox, in the project explorer, right lick, click on ",(0,s.jsx)(i.code,{children:"Create"})," and select Material. Set the shader of the material to ",(0,s.jsx)(i.code,{children:"Skybox/Panoramic"}),". Then simply drag the material into the scene."]}),"\n",(0,s.jsxs)("div",{style:{textAlign:"center"},children:[(0,s.jsx)("img",{src:"https://github.com/layzyidiot/e-sw/blob/main/images/skybox.png?raw=true",alt:"Shaders for skyboxes",width:"30%",height:"30%"}),(0,s.jsx)("img",{src:"https://github.com/layzyidiot/e-sw/blob/main/images/skybox2.png?raw=true",alt:"Shaders for skyboxes",width:"32.5%",height:"32.5%"})]}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:["You can change how the skybox affects the lighting in the level via ",(0,s.jsx)(i.code,{children:"Intensity Multiplier"}),", setting to 0 disables the skybox from effecting the lighting, This field can be also used to create ",(0,s.jsx)("b",{children:"Fog"})," in your level."]})})]})}function d(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>l});var n=t(6540);const s={},o=n.createContext(s);function r(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);